html[data-theme=light] {
  --color-white: #fff;
  --app-orange: #e46e4c;
  --app-blue:#12274a;
  --text-color:#12274a;
  --text-shadow: -1px -1px 2px #fff, 1px 1px 2px #c2c2c2;
  --bg-color: #e6e7ee;
  --bg-shadow: 3px 3px 6px #b8b9be, -3px -3px 6px #fff;
  --border: 0.0625rem solid transparent;
  --border-color: #d1d9e6;
  --bg-grid-card: #f6f7ff, #cfd0d6;
  --btn-toggle-switch-bg: #f47651, #cd6344;
  --btn-toggle-switch-shadow: 5px 5px 11px #60211b, -2px -2px 11px #ff836d;
  --input-toggle-shadow: inset 5px 5px 15px #5b2c1e, inset -1px 1px 14px #ffb07a;
  --menu-toggle-bg: #ff5849, #d74a3d;
  --menu-toggle-shadow: inset 5px 5px 14px #5b2c1e, inset -5px -5px 14px #ffb07a;
  --menu-item-text-shadow: 2px -2px 8px #2b1a13, -2px 2px 8px #2b1a13;
  --menu-item-shadow: 2px 2px 11px #592a1d, -2px -2px 11px #ffaa73;
  --menu-item-hover-shadow: inset 5px 5px 8px #5b2c1e, inset -5px -5px 8px #ffb07a;
  --menu-item-hover-text-shadow: 3px -3px 8px #ed9c6c, -3px 3px 8px #703726;
  --menu-item-hover-text-bg: #12274a;
}

html[data-theme=dark] {
  --color-white: #fff;
  --app-orange: #e46e4c;
  --app-blue:#12274a;
  --text-color:#fff;
  --text-shadow: -1px -1px 2px #fff, 1px 1px 2px #c2c2c2;
  --bg-color: #12274a;
  --bg-shadow: 5px 5px 10px #0a1324, -5px -5px 10px #264b8e;
  --border: 0.5px solid #224580;
  --border-color: #d1d9e6;
  --bg-grid-card: #12274a, #12274a;
  --btn-toggle-switch-bg: #f47651, #cd6344;
  --btn-toggle-switch-shadow: 5px 5px 11px #60211b, -2px -2px 11px #ff836d;
  --input-toggle-shadow: inset 5px 5px 15px #5b2c1e, inset -1px 1px 14px #ffb07a;
  --menu-toggle-bg: #ff5849, #d74a3d;
  --menu-toggle-shadow: inset 5px 5px 14px #5b2c1e, inset -5px -5px 14px #ffb07a;
  --menu-item-text-shadow: 2px -2px 8px #2b1a13, -2px 2px 8px #2b1a13;
  --menu-item-shadow: 2px 2px 11px #592a1d, -2px -2px 11px #ffaa73;
  --menu-item-hover-shadow: inset 5px 5px 8px #5b2c1e, inset -5px -5px 8px #ffb07a;
  --menu-item-hover-text-shadow: 3px -3px 8px #ed9c6c, -3px 3px 8px #703726;
  --menu-item-hover-text-bg: #12274a;
}

html {
  height: 100%;
  font-family: "Roboto", sans-serif;
  font-family: "Roboto Condensed", sans-serif;
}

body {
  height: 75vh;
  margin-top: 8vh;
  background: var(--bg-color);
  padding: 1rem;
}

#logo {
  height: 3rem;
  margin-top: 1.5rem;
}

.logo-image {
  width: 50%;
  height: auto;
}

.brand {
  margin-left: 1rem;
}

.grid-container {
  max-width: 1200px;
  margin: 0 auto;
  display: grid;
  grid-gap: 3rem;
}

.grid-item {
  background: linear-gradient(145deg, var(--bg-grid-card));
  box-shadow: var(--bg-shadow);
  border: var(--border);
  border-color: var(--border-color);
  border-radius: 20px;
  height: 5.5rem;
}

@media (min-width: 300px) {
  .grid-container {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (min-width: 600px) {
  .grid-container {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (min-width: 900px) {
  .grid-container {
    grid-template-columns: repeat(3, 1fr);
  }
}
/* To override default padding and margin from row */
.row > * {
  padding-right: 0;
  padding-left: 0;
  margin-top: 0;
}

.card-title {
  color: var(--text-color);
  font-weight: bold;
  letter-spacing: 0.5px;
  text-shadow: var(--text-shadow);
}

/* Image size and padding to center image in middle */
.card-img-top {
  height: 7vh;
  padding-top: 0.5rem;
}

/* The component will reset button browser styles */
.r-button {
  --uirButtonBackgroundColor: var(--rButtonBackgroundColor, transparent);
  --uirButtonPadding: var(--rButtonPadding, var(--rButtonPaddingTop, 0) var(--rButtonPaddingRight, 0) var(--rButtonPaddingBottom, 0) var(--rButtonPaddingLeft, 0));
  --uirButtonBorderWidth: var(--rButtonBorderWidth, 0);
  --uirButtonBorderStyle: var(--rButtonBorderStyle, solid);
  --uirButtonBorderColor: var(--rButtonBorderColor, currentColor);
  --uirButtonFontFamily: var(--rButtonFontFamily, inherit);
  --uirButtonFontSize: var(--rButtonFontSize, inherit);
  --uirButtonColor: var(--rButtonColor);
  background-color: var(--uirButtonBackgroundColor);
  padding: var(--uirButtonPadding);
  border-width: var(--uirButtonBorderWidth);
  border-style: var(--uirButtonBorderStyle);
  border-color: var(--uirButtonBorderColor);
  cursor: pointer;
  font-family: var(--uirButtonFontFamily);
  font-size: var(--uirButtonFontSize);
}

.r-button::-moz-focus-inner,
.r-button[type=button]::-moz-focus-inner,
.r-button[type=reset]::-moz-focus-inner,
.r-button[type=submit]::-moz-focus-inner {
  /* Remove the inner border and padding in Firefox. */
  border-style: none;
  padding: 0;
}

/* The component will reset browser's styles of link */
.r-link {
  --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
  --uirLinkTextColor: var(--rLinkTextColor);
  --uirLinkTextDecoration: var(--rLinkTextDecoration, none);
  display: var(--uirLinkDisplay) !important;
  color: var(--uirLinkTextColor) !important;
  -webkit-text-decoration: var(--uirLinkTextDecoration) !important;
          text-decoration: var(--uirLinkTextDecoration) !important;
  border-radius: 10px;
  padding: 5px;
  background: linear-gradient(145deg, #c85f41, #ee714d);
  box-shadow: var(--menu-item-shadow);
  text-shadow: var(--menu-item-text-shadow);
  width: 90%;
  justify-content: center;
  letter-spacing: 2px;
}

.r-link:hover {
  background: var(--app-primary);
  box-shadow: var(--menu-item-hover-shadow);
  color: var(--menu-item-hover-text-bg) !important;
  text-shadow: var(--menu-item-hover-text-shadow);
}

/* The component will reset browser's styles of list */
.r-list {
  --uirListPaddingLeft: var(--rListPaddingLeft, 0);
  --uirListMarginTop: var(--rListMarginTop, 0);
  --uirListMarginBottom: var(--rListMarginBottom, 0);
  --uirListListStyle: var(--rListListStyle, none);
  padding-left: var(--uirListPaddingLeft) !important;
  margin-top: var(--uirListMarginTop) !important;
  /* margin-bottom: var(--uirListMarginBottom) !important; */
  list-style: var(--uirListListStyle) !important;
  padding-top: 2rem;
  padding-bottom: 2rem;
}

/* Basic styles of the hamburger component */
.m-hamburger {
  --uiHamburgerThickness: var(--hamburgerThickness, 4px);
  display: var(--hamburgerDisplay, inline-flex);
  width: var(--hamburgerWidth, 28px);
  height: var(--hamburgerHeight, 20px);
  position: relative;
}

.m-hamburger::before,
.m-hamburger::after,
.m-hamburger__label {
  width: 100%;
  height: var(--uiHamburgerThickness);
  border-radius: var(--hamburgerBorderRadius, 5px);
  background-color: var(--bg-color);
  position: absolute;
  left: 0;
}

.m-hamburger::before,
.m-hamburger::after {
  content: "";
}

.m-hamburger::before {
  top: 0;
}

.m-hamburger::after {
  bottom: 0;
}

.m-hamburger__label {
  /* The calculation of middle hamburger button line position */
  top: calc(50% - var(--uiHamburgerThickness) / 2);
}

/* helper to hide elements that are available only for screen readers. */
.screen-reader {
  width: var(--screenReaderWidth, 1px) !important;
  height: var(--screenReaderHeight, 1px) !important;
  padding: var(--screenReaderPadding, 0) !important;
  border: var(--screenReaderBorder, none) !important;
  position: var(--screenReaderPosition, absolute) !important;
  clip: var(--screenReaderClip, rect(1px, 1px, 1px, 1px)) !important;
  overflow: var(--screenReaderOverflow, hidden) !important;
}

/* ------------------------- Menu ----------------- */
.menu {
  --uiMenuCircleSize: var(--menuCircleSize, 6.25rem);
  --uiMenuCircleOffset: var(--menuCircleOffset, 1rem);
  --uiMenuCircleHeight: calc(var(--uiMenuCircleSize) / 2);
  --uiMenuCircleBackgroundColor: var(--menuCircleBackgroundColor, currentColor);
  --uiMenuHamburgerWidth: var(--menuHamburgerWidth, 1.75rem);
  --uiMenuHamburgerHeight: var(--menuHamburgerHeight, 1.25rem);
  --rButtonPaddingTop: calc(var(--uiMenuCircleHeight) - var(--uiMenuHamburgerHeight) - var(--uiMenuCircleOffset));
  --hamburgerWidth: var(--uiMenuHamburgerWidth);
  --hamburgerHeight: var(--uiMenuHamburgerHeight);
  --hamburgerBackgroundColor: var(--menuHamburgerBackgroundColor, var(--bg-color));
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: var(--menuZindex, 1100);
}

.menu__nav {
  box-sizing: border-box;
  width: 100%;
  height: 0;
  transition: opacity 0.2s ease-out;
  opacity: 0;
  display: flex;
  align-items: center;
  z-index: 2;
}

.menu__list {
  width: 100%;
  max-height: 100%;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.menu__toggle {
  box-sizing: border-box;
  width: var(--uiMenuCircleSize);
  height: var(--uiMenuCircleHeight);
  flex: none;
  position: relative;
}

.menu__toggle::before {
  /*
  1. The font-size property is used to simplify calculations of the element's sizes and position
  2. The negative value for the bottom property need for hiding half of circle.
  */
  content: "";
  width: 1em;
  height: 1em;
  font-size: var(--uiMenuCircleSize);
  /* 1 */
  background: var(--app-primary);
  border-radius: 50%;
  border: 0.0625rem solid transparent;
  border-color: var(--border-color);
  box-shadow: var(--menu-toggle-shadow);
  position: absolute;
  bottom: -0.5em;
  /* 2 */
  left: calc(50% - 0.5em);
  z-index: -1;
  will-change: width, height;
  transition: transform 0.25s cubic-bezier(0.04, -0.1, 0.29, 0.98), width 0.25s cubic-bezier(0.04, -0.1, 0.29, 0.98), height 0.25s cubic-bezier(0.04, -0.1, 0.29, 0.98);
}

/* styles of hamburger's animation */
.m-hamburger::before,
.m-hamburger::after,
.m-hamburger__label {
  transition-timing-function: ease;
  transition-duration: 0.15s;
}

.m-hamburger::before,
.m-hamburger::after {
  transition-property: transform;
}

.m-hamburger__label {
  transition-property: transform, opacity;
}

/* ------------------------- Menu States ----------------- */
.menu__toggle:focus {
  outline: var(--menuHaburgerOutlineOWidth, 2px) solid var(--menuHaburgerOutlineColor);
  outline-offset: var(--menuHaburgerOutlineOffset, 5px);
}

.menu_activated {
  height: 100%;
}

.menu_activated .menu__nav {
  flex-grow: 1;
  opacity: 1;
  will-change: opacity;
  transition-duration: 0.2s;
  transition-delay: 0.3s;
}

.menu_activated .menu__toggle::before {
  width: 100vmax;
  height: 100vmax;
  transform: translate3d(-50vh, -50vh, 0) scale(5);
  transition-duration: 1s;
}

.menu:not(.menu_activated) .menu__list {
  display: none;
}

.menu_activated .m-hamburger::before {
  top: 50%;
  transform: translate3d(0, -50%, 0) rotate(45deg);
}

.menu_activated .m-hamburger::after {
  transform: translate3d(0, -50%, 0) rotate(135deg);
  top: 50%;
}

.menu_activated .m-hamburger__label {
  transform: rotate(-45deg) translate3d(-0.285em, -0.3em, 0);
  opacity: 0;
}

.menu_activated {
  --menuHaburgerOutlineColor: var(--color-white);
}

/* ------------------------- Settings ----------------- */
.page {
  max-width: 380px;
  padding: 1rem;
  margin: auto;
  text-align: center;
}

.page__name {
  display: block;
  font-size: 1.5rem;
  font-weight: 700;
}

.page__hint {
  display: block;
  line-height: 1.45;
  margin-top: 1rem;
}

.menu__group {
  --rLinkTextColor: var(--color-white);
  padding: 0.5rem 2rem;
  font-size: 1.5rem;
  font-weight: 700;
  text-transform: uppercase;
}

.linktr {
  order: -1;
  padding: 1.75rem;
  text-align: center;
}

.linktr__goal {
  background-color: rgb(209, 246, 255);
  color: rgb(8, 49, 112);
  box-shadow: rgba(8, 49, 112, 0.24) 0px 2px 8px 0px;
  border-radius: 2rem;
  padding: 0.5rem 1.25rem;
}

@media (min-width: 1024px) {
  .linktr {
    position: absolute;
    right: 1rem;
    bottom: 1rem;
  }
}
/* ------------------------- Toggle Switch ----------------- */
.switch-holder {
  align-items: center;
  justify-content: space-between;
  border-radius: 10px;
}

.switch-label {
  width: 150px;
}

.switch-label i {
  margin-right: 5px;
}

.switch-toggle {
  height: 40px;
}

.switch-toggle input[type=checkbox] {
  position: absolute;
  opacity: 0;
  z-index: -2;
}

.switch-toggle input[type=checkbox] + label {
  position: relative;
  display: inline-block;
  width: 100px;
  height: 40px;
  border-radius: 20px;
  margin: 0;
  cursor: pointer;
  background: var(--app-primary);
  box-shadow: var(--input-toggle-shadow);
}

.switch-toggle input[type=checkbox] + label::before {
  position: absolute;
  content: url(/media/theme/light-mode.svg);
  padding: 2px;
  font-size: 13px;
  text-align: center;
  line-height: 25px;
  top: 6px;
  left: 8px;
  width: 43px;
  height: 28px;
  border-radius: 22px;
  box-shadow: var(--btn-toggle-switch-shadow);
  background: linear-gradient(145deg, var(--btn-toggle-switch-bg));
  transition: 0.3s ease-in-out;
}

.switch-toggle input[type=checkbox]:checked + label::before {
  left: 50%;
  content: url(/media/theme/dark-mode.svg);
  color: var(--bg-color);
  background-color: var(--bg-color);
  box-shadow: var(--btn-toggle-switch-shadow);
}/*# sourceMappingURL=style.css.map */